basePath: /v1
definitions:
  controllers.AdminController:
    type: object
  controllers.Token:
    properties:
      access_token:
        example: ldifgj1lij31t9gsegl
        type: string
    type: object
  models.GetQuery:
    properties:
      limit:
        example: 2
        type: integer
      offset:
        example: 1
        type: integer
      orderBy:
        example:
        - desc
        items:
          type: string
        type: array
      sortBy:
        example:
        - email
        items:
          type: string
        type: array
    type: object
  models.User:
    properties:
      age:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      email:
        example: example@naver.com
        type: string
      gender:
        type: string
      hasProfile:
        type: boolean
      id:
        type: integer
      is_admin:
        type: boolean
      joinType:
        type: string
      mainProfileImage:
        type: string
      nickname:
        type: string
      password:
        example: 1234qwer
        type: string
      point:
        type: integer
      snsId:
        type: string
      token:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  utils.ArrayResult:
    properties:
      items:
        type: object
      totalCount:
        type: integer
    type: object
host: www.sumwhere.kr
info:
  contact:
    email: qjadn0914@naver.com
    name: API Support
    url: https://www.sumwhere.kr
  description: This is a Sumwhere server API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Sumwhere API
  version: "2.0"
paths:
  /admin/assgin:
    patch:
      consumes:
      - application/json
      description: 기존 어드민사용자가 추가로 어드민 권한을 유저에게 ≠부여
      parameters:
      - description: '{''id'':1}'
        in: body
        name: id
        schema:
          $ref: '#/definitions/controllers.AdminController'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 해당 유저정보
          schema:
            $ref: '#/definitions/models.User'
            type: object
      summary: 어드민 권한 부여
      tags:
      - admin
  /signin/email:
    post:
      consumes:
      - application/json
      description: 이메일을 이용한 로그인
      parameters:
      - description: email 과 passward만 쓸것
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: access 토큰을 반환
          schema:
            $ref: '#/definitions/controllers.Token'
            type: object
      summary: 이메일 로그인
      tags:
      - signin
  /signin/facebook:
    post:
      consumes:
      - application/json
      description: 페이스북을 이용한 로그인
      parameters:
      - description: '토큰 전송 '
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/controllers.Token'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: access 토큰을 반환
          schema:
            $ref: '#/definitions/controllers.Token'
            type: object
      summary: 페이스북 로그인
      tags:
      - signin
  /signin/kakao:
    post:
      consumes:
      - application/json
      description: 카카오를 이용한 로그인
      parameters:
      - description: '토큰 전송 '
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/controllers.Token'
          type: object
      - description: Bottle ID
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/controllers.Token'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: access 토큰을 반환
          schema:
            $ref: '#/definitions/controllers.Token'
            type: object
      summary: kakao 로그인
      tags:
      - signin
  /signup/email:
    post:
      consumes:
      - application/json
      description: 이메일을 이용한 가입
      parameters:
      - description: email 과 passward만 쓸것
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: access 토큰을 반환
          schema:
            $ref: '#/definitions/controllers.Token'
            type: object
      summary: 이메일 가입
      tags:
      - signup
  /signup/nickname:
    get:
      consumes:
      - application/json
      description: 닉네임이 존재하는지 확인
      produces:
      - application/json
      responses:
        "200":
          description: bool 타입의 결과 있으면 true 없으면 false
          schema:
            type: boolean
      summary: 닉네임 확인
      tags:
      - signup
  /user/all:
    get:
      consumes:
      - application/json
      description: 가입자 리스트 반환
      parameters:
      - description: 순서,순서마다의 정렬순서 (desc|asc), 어디서부터, 몇개를 가져올지
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/models.GetQuery'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 쿼리의 결과
          schema:
            $ref: '#/definitions/utils.ArrayResult'
            type: object
      summary: 유저 리스트 반환
      tags:
      - user
schemes:
- https
swagger: "2.0"
